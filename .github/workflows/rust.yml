name: Rust

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: kari-linux-x64
          - os: windows-latest 
            target: x86_64-pc-windows-gnu
            artifact_name: kari-windows-x64.exe
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: kari-macos-arm64

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          gcc \
          libssl-dev \
          pkg-config \
          libclang-dev

    - name: Install Windows dependencies
      if: matrix.os == 'windows-latest'
      run: |
        choco install mingw
        rustup default stable-gnu

    - name: Install macOS dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install openssl@3
        brew install pkg-config

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Build
      run: cargo build --release --target ${{ matrix.target }} --verbose
      env:
        OPENSSL_DIR: /usr/local/opt/openssl@3
    
    # - name: Test
    #   run: cargo test --target ${{ matrix.target }} --verbose
    #   env:
    #     OPENSSL_DIR: /usr/local/opt/openssl@3

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          kari-linux-x64
          kari-windows-x64.exe
          kari-macos-arm64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
